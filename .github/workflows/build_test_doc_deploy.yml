name: Haskell CI

on: [push, pull_request, workflow_dispatch]

env:
  HADDOCK_DIR: haddock_build
  HADDOCK_HTML: haddock_html

jobs:

  build_test_doc:
    name: GHC ${{ matrix.ghc }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ghc: ['9.2', '9.4', '9.6', '9.8', '9.10', '9.12']

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache cabal packages, store and dist-newstyle
        uses: actions/cache@v4
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-ghc-${{ matrix.ghc }}-${{ hashFiles('**/*.cabal', '**/cabal.project', '**/cabal-project.freeze') }}
          restore-keys: ${{ runner.os }}-ghc-${{ matrix.ghc }}

      - name: Set up GHC ${{ matrix.ghc }}
        id: setup
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: 'latest'
          cabal-update: true

      - name: Install dependencies
        run: cabal build --only-dependencies --enable-tests

      - name: Build
        run: cabal build --enable-tests

      - name: Run tests
        run: cabal test --test-show-details=streaming

      - name: Build API docs
        run: cabal haddock --builddir=$HADDOCK_BUILD --haddock-hyperlinked-source --haddock-html-location='https://hackage.haskell.org/package/$pkg-$version/docs'

      - name: Collect generated API docs
        run: mv $(find $HADDOCK_BUILD -wholename '*doc/html/uptime-dick' | head -n 1) $HADDOCK_HTML

      - name: Store generated API docs
        uses: actions/upload-artifact@v4
        with:
          name: uptime-dick API docs (GHC ${{ matrix.ghc }} on ${{ matrix.os }})
          path: ${{ env.HADDOCK_HTML }}

      - name: Upload generated API docs for pages
        if: matrix.ghc == '9.6'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.HADDOCK_HTML }}

  deploy:
    needs: build_test_doc
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to pages
        id: deployment
        uses: actions/deploy-pages@v4
